<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dc.members">


	<resultMap type="com.dc.members.vo.MemberVo"
		id="memberResultMap">
		<id column="MEMBER_NO" property="memberNo" />
		<result column="ROWNUM" property="rownum" />
		<result column="MEMBER_GRADE" property="memberGrade" />
		<result column="EMAIL" property="email" />
		<result column="NICKNAME" property="nickName" />
		<result column="PASSWORD" property="password" />
		<result column="CRE_DATE" property="createDate"
			javaType="java.util.Date" />
		<result column="MOD_DATE" property="modifiedDate"
			javaType="java.util.Date" />
	</resultMap>
	
	<!-- 
	<select id="memberSelectList" parameterType="map" resultMap="memberResultMap">
		SELECT ROWNUM, MEMBER_NO, EMAIL, NICKNAME, CRE_DATE
		FROM MEMBERS
		WHERE MEMBER_GRADE = 'member'
		ORDER BY ROWNUM DESC
	</select> 
	-->
	<!-- 회원 전체보기  -->
	<select id="memberSelectList" parameterType="map" resultMap="memberResultMap">
		SELECT ROWNUM,MEMBER_NO, EMAIL, NICKNAME, CRE_DATE
			FROM (
			SELECT ROWNUM RNUM, MEMBER_NO, M.EMAIL, M.NICKNAME, M.CRE_DATE
				FROM (
					SELECT MEMBER_NO, EMAIL, NICKNAME, CRE_DATE
					FROM MEMBERS
					<choose>
						<when test="searchOption == 'title'">
							WHERE EMAIL LIKE '%'||#{keyword}||'%'
						</when>
                    	<otherwise>
                    		WHERE NICKNAME LIKE '%'||#{keyword}||'%'
                    	</otherwise>
                    </choose>
                    AND MEMBER_GRADE = 'member'
					ORDER BY ROWNUM ASC) M
		) MEMBER
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<select id="memberSelectTotalCount" parameterType="map"
		resultType="int">
		SELECT COUNT(*)
		FROM MEMBERS
		<choose>
			<when test="searchOption == 'title'">
				WHERE EMAIL LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				WHERE NICKNAME LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
		AND MEMBER_GRADE = 'member'
	</select>
		
	<!-- 이메일 중복 -->
	<select id="memberEmailChk" parameterType="string" resultMap="memberResultMap">
		SELECT EMAIL
		FROM MEMBERS
		WHERE EMAIL = #{value}
	</select>
	
	<!-- 닉네임 증복 -->
	<select id="memberNickNameCHk" parameterType="string" resultMap="memberResultMap">
		SELECT NICKNAME
		FROM MEMBERS
		WHERE NICKNAME = #{value}
	</select>
	
	<select id="memberPasswordFind" parameterType="map" resultMap="memberResultMap">
		SELECT  EMAIL, NICKNAME
		FROM MEMBERS
		WHERE EMAIL = #{email}
		AND NICKNAME = #{nickName}
	</select> 
			
	<!-- 회원 상세정보보기  -->
	<select id="memberSelectOne" parameterType="int" resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_GRADE, EMAIL, NICKNAME, CRE_DATE
		FROM MEMBERS
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 회원 로그인 -->
	<select id="memberExist" parameterType="map"
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_GRADE, EMAIL, NICKNAME, CRE_DATE
		FROM MEMBERS
		WHERE EMAIL = #{email} AND PASSWORD = #{password}
	</select>

	
	
	<!-- 회원정보 수정  -->
	<update id="memberUpdateOne" parameterType="memberVo">
		UPDATE 	MEMBERS
		<set>
			<if test="email != ''">EMAIL = #{email},</if>
			<if test="nickName != ''">NICKNAME = #{nickName},</if>
			<if test="password != ''">PASSWORD = #{password},</if>
			MOD_DATE = SYSDATE
		</set>
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 추가하기  -->
	<insert id="memberInsertOne" parameterType="memberVo" useGeneratedKeys="true" keyProperty="memberNo">
		<selectKey keyProperty="memberNo" resultType="int" order="BEFORE">
			SELECT MEMBER_NO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO MEMBERS
			(MEMBER_NO, MEMBER_GRADE, EMAIL, NICKNAME,PASSWORD,CRE_DATE, MOD_DATE)
		VALUES(#{memberNo}, 'member', #{email}, 
			#{nickName}, #{password}, SYSDATE, SYSDATE)
	</insert>
	
	<!-- 회원 삭제하기  -->
	<delete id="memberDelete" parameterType="int">
		DELETE FROM MEMBERS
		WHERE MEMBER_NO = #{memberNo}
	</delete>
	
	
</mapper>